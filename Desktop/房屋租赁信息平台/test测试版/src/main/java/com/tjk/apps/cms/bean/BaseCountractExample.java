package com.tjk.apps.cms.bean;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BaseCountractExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public BaseCountractExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andCIdIsNull() {
            addCriterion("c_id is null");
            return (Criteria) this;
        }

        public Criteria andCIdIsNotNull() {
            addCriterion("c_id is not null");
            return (Criteria) this;
        }

        public Criteria andCIdEqualTo(Integer value) {
            addCriterion("c_id =", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotEqualTo(Integer value) {
            addCriterion("c_id <>", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdGreaterThan(Integer value) {
            addCriterion("c_id >", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("c_id >=", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdLessThan(Integer value) {
            addCriterion("c_id <", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdLessThanOrEqualTo(Integer value) {
            addCriterion("c_id <=", value, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdIn(List<Integer> values) {
            addCriterion("c_id in", values, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotIn(List<Integer> values) {
            addCriterion("c_id not in", values, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdBetween(Integer value1, Integer value2) {
            addCriterion("c_id between", value1, value2, "cId");
            return (Criteria) this;
        }

        public Criteria andCIdNotBetween(Integer value1, Integer value2) {
            addCriterion("c_id not between", value1, value2, "cId");
            return (Criteria) this;
        }

        public Criteria andDateofhireIsNull() {
            addCriterion("DateOfHire is null");
            return (Criteria) this;
        }

        public Criteria andDateofhireIsNotNull() {
            addCriterion("DateOfHire is not null");
            return (Criteria) this;
        }

        public Criteria andDateofhireEqualTo(Date value) {
            addCriterionForJDBCDate("DateOfHire =", value, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireNotEqualTo(Date value) {
            addCriterionForJDBCDate("DateOfHire <>", value, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireGreaterThan(Date value) {
            addCriterionForJDBCDate("DateOfHire >", value, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DateOfHire >=", value, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireLessThan(Date value) {
            addCriterionForJDBCDate("DateOfHire <", value, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DateOfHire <=", value, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireIn(List<Date> values) {
            addCriterionForJDBCDate("DateOfHire in", values, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireNotIn(List<Date> values) {
            addCriterionForJDBCDate("DateOfHire not in", values, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DateOfHire between", value1, value2, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andDateofhireNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DateOfHire not between", value1, value2, "dateofhire");
            return (Criteria) this;
        }

        public Criteria andNorentdateIsNull() {
            addCriterion("NoRentDate is null");
            return (Criteria) this;
        }

        public Criteria andNorentdateIsNotNull() {
            addCriterion("NoRentDate is not null");
            return (Criteria) this;
        }

        public Criteria andNorentdateEqualTo(Date value) {
            addCriterionForJDBCDate("NoRentDate =", value, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("NoRentDate <>", value, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateGreaterThan(Date value) {
            addCriterionForJDBCDate("NoRentDate >", value, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NoRentDate >=", value, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateLessThan(Date value) {
            addCriterionForJDBCDate("NoRentDate <", value, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("NoRentDate <=", value, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateIn(List<Date> values) {
            addCriterionForJDBCDate("NoRentDate in", values, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("NoRentDate not in", values, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NoRentDate between", value1, value2, "norentdate");
            return (Criteria) this;
        }

        public Criteria andNorentdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("NoRentDate not between", value1, value2, "norentdate");
            return (Criteria) this;
        }

        public Criteria andOwerIsNull() {
            addCriterion("ower is null");
            return (Criteria) this;
        }

        public Criteria andOwerIsNotNull() {
            addCriterion("ower is not null");
            return (Criteria) this;
        }

        public Criteria andOwerEqualTo(Integer value) {
            addCriterion("ower =", value, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerNotEqualTo(Integer value) {
            addCriterion("ower <>", value, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerGreaterThan(Integer value) {
            addCriterion("ower >", value, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerGreaterThanOrEqualTo(Integer value) {
            addCriterion("ower >=", value, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerLessThan(Integer value) {
            addCriterion("ower <", value, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerLessThanOrEqualTo(Integer value) {
            addCriterion("ower <=", value, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerIn(List<Integer> values) {
            addCriterion("ower in", values, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerNotIn(List<Integer> values) {
            addCriterion("ower not in", values, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerBetween(Integer value1, Integer value2) {
            addCriterion("ower between", value1, value2, "ower");
            return (Criteria) this;
        }

        public Criteria andOwerNotBetween(Integer value1, Integer value2) {
            addCriterion("ower not between", value1, value2, "ower");
            return (Criteria) this;
        }

        public Criteria andCustomerIsNull() {
            addCriterion("Customer is null");
            return (Criteria) this;
        }

        public Criteria andCustomerIsNotNull() {
            addCriterion("Customer is not null");
            return (Criteria) this;
        }

        public Criteria andCustomerEqualTo(Integer value) {
            addCriterion("Customer =", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotEqualTo(Integer value) {
            addCriterion("Customer <>", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerGreaterThan(Integer value) {
            addCriterion("Customer >", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerGreaterThanOrEqualTo(Integer value) {
            addCriterion("Customer >=", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerLessThan(Integer value) {
            addCriterion("Customer <", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerLessThanOrEqualTo(Integer value) {
            addCriterion("Customer <=", value, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerIn(List<Integer> values) {
            addCriterion("Customer in", values, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotIn(List<Integer> values) {
            addCriterion("Customer not in", values, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerBetween(Integer value1, Integer value2) {
            addCriterion("Customer between", value1, value2, "customer");
            return (Criteria) this;
        }

        public Criteria andCustomerNotBetween(Integer value1, Integer value2) {
            addCriterion("Customer not between", value1, value2, "customer");
            return (Criteria) this;
        }

        public Criteria andHouseIsNull() {
            addCriterion("house is null");
            return (Criteria) this;
        }

        public Criteria andHouseIsNotNull() {
            addCriterion("house is not null");
            return (Criteria) this;
        }

        public Criteria andHouseEqualTo(Integer value) {
            addCriterion("house =", value, "house");
            return (Criteria) this;
        }

        public Criteria andHouseNotEqualTo(Integer value) {
            addCriterion("house <>", value, "house");
            return (Criteria) this;
        }

        public Criteria andHouseGreaterThan(Integer value) {
            addCriterion("house >", value, "house");
            return (Criteria) this;
        }

        public Criteria andHouseGreaterThanOrEqualTo(Integer value) {
            addCriterion("house >=", value, "house");
            return (Criteria) this;
        }

        public Criteria andHouseLessThan(Integer value) {
            addCriterion("house <", value, "house");
            return (Criteria) this;
        }

        public Criteria andHouseLessThanOrEqualTo(Integer value) {
            addCriterion("house <=", value, "house");
            return (Criteria) this;
        }

        public Criteria andHouseIn(List<Integer> values) {
            addCriterion("house in", values, "house");
            return (Criteria) this;
        }

        public Criteria andHouseNotIn(List<Integer> values) {
            addCriterion("house not in", values, "house");
            return (Criteria) this;
        }

        public Criteria andHouseBetween(Integer value1, Integer value2) {
            addCriterion("house between", value1, value2, "house");
            return (Criteria) this;
        }

        public Criteria andHouseNotBetween(Integer value1, Integer value2) {
            addCriterion("house not between", value1, value2, "house");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentIsNull() {
            addCriterion("MonthlyRent is null");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentIsNotNull() {
            addCriterion("MonthlyRent is not null");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentEqualTo(BigDecimal value) {
            addCriterion("MonthlyRent =", value, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentNotEqualTo(BigDecimal value) {
            addCriterion("MonthlyRent <>", value, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentGreaterThan(BigDecimal value) {
            addCriterion("MonthlyRent >", value, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MonthlyRent >=", value, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentLessThan(BigDecimal value) {
            addCriterion("MonthlyRent <", value, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MonthlyRent <=", value, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentIn(List<BigDecimal> values) {
            addCriterion("MonthlyRent in", values, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentNotIn(List<BigDecimal> values) {
            addCriterion("MonthlyRent not in", values, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MonthlyRent between", value1, value2, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andMonthlyrentNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MonthlyRent not between", value1, value2, "monthlyrent");
            return (Criteria) this;
        }

        public Criteria andTotalIsNull() {
            addCriterion("Total is null");
            return (Criteria) this;
        }

        public Criteria andTotalIsNotNull() {
            addCriterion("Total is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEqualTo(BigDecimal value) {
            addCriterion("Total =", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotEqualTo(BigDecimal value) {
            addCriterion("Total <>", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThan(BigDecimal value) {
            addCriterion("Total >", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("Total >=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThan(BigDecimal value) {
            addCriterion("Total <", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("Total <=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalIn(List<BigDecimal> values) {
            addCriterion("Total in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotIn(List<BigDecimal> values) {
            addCriterion("Total not in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Total between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("Total not between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andCommittimeIsNull() {
            addCriterion("committime is null");
            return (Criteria) this;
        }

        public Criteria andCommittimeIsNotNull() {
            addCriterion("committime is not null");
            return (Criteria) this;
        }

        public Criteria andCommittimeEqualTo(Date value) {
            addCriterion("committime =", value, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeNotEqualTo(Date value) {
            addCriterion("committime <>", value, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeGreaterThan(Date value) {
            addCriterion("committime >", value, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeGreaterThanOrEqualTo(Date value) {
            addCriterion("committime >=", value, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeLessThan(Date value) {
            addCriterion("committime <", value, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeLessThanOrEqualTo(Date value) {
            addCriterion("committime <=", value, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeIn(List<Date> values) {
            addCriterion("committime in", values, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeNotIn(List<Date> values) {
            addCriterion("committime not in", values, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeBetween(Date value1, Date value2) {
            addCriterion("committime between", value1, value2, "committime");
            return (Criteria) this;
        }

        public Criteria andCommittimeNotBetween(Date value1, Date value2) {
            addCriterion("committime not between", value1, value2, "committime");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("Remarks is null");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("Remarks is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("Remarks =", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("Remarks <>", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("Remarks >", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("Remarks >=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("Remarks <", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("Remarks <=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("Remarks like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("Remarks not like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksIn(List<String> values) {
            addCriterion("Remarks in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotIn(List<String> values) {
            addCriterion("Remarks not in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("Remarks between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("Remarks not between", value1, value2, "remarks");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_countract
     *
     * @mbg.generated do_not_delete_during_merge Mon Apr 20 23:59:13 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table s_countract
     *
     * @mbg.generated Mon Apr 20 23:59:13 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}